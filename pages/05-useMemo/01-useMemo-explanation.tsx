/** 📌 Memoization(메모이제이션
 * useMemo에서 memo는 "Memoization(메모이제이션)"을 의미합니다.
 * - 동일한 값을 리턴하는 함수를 반복적으로 호출해야 한다면,
 * - 맨 처음 값을 계산할 떄, 해당 값을 메모리에 저장해서,
 * - 필요할 때마다 또 다시 계산하지 않고 메모리에서 꺼내서 재사용을 하는 기법
 * - 쉽게 말해, 자주 사용하는 값을 캐싱을 해둬서 그 값이 필요할 떄마다 다시 계산하는게 아니라 꺼내서 쓰는 것
 */

/** 📌 함수형 컴포넌트의 문제점
 * 함수형 컴포넌트가 렌더링된다 === 말 그대로 함수라서 호출할 떄, 모든 내부 변수들이 초기화됨
 * useMemo를 사용하면, 위 문제를 해결가능함
 */

/** 📌 useMemo(콜백함수, 의존성배열)
 * 렌더링 → Component 함수 호출, Memoization →
 * 렌더링 → Component 함수 호출, Memoize된 값을 재사용
 *
 * 메모이제이션된 값을 업데이트해서 다시 메모이제이션해줌
 * 빈 배열을 넘겨주면, 컴포넌트가 mount되었을 때만 값을 계산하고, 이후에는 항상 메모이제이션된 값을 꺼내씀
 *
 * useMemo 역시 무분별하게 사용하면, 오히려 성능에 무리가 갑니다. 꼭 필요할 떄만 씁시다.
 * useMemo를 쓴다는 건, 값을 재활용하기 위해, 따로 메모리를 소비해서 저장해놓는 것을 의미하기 때문에,
 * 불필요한 값까지 메모이제이션을 한다면, 오히려 성능이 악화됨
 */
